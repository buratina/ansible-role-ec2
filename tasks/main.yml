---
- name: Create EC2 security group
  ec2_group:
    aws_access_key: "{{ lookup('env', 'AWS_ACCESS_KEY') }}"
    aws_secret_key: "{{ lookup('env', 'AWS_SECRET_KEY') }}"
    name: insecure_all
    description: all ports open
    region: "{{ ec2_region }}"
    vpc_id: "{{ ec2_vpc_id }}"
    rules:
      - proto: all
        cidr_ip: 0.0.0.0/0
    rules_egress:
      - proto: all
        cidr_ip: 0.0.0.0/0
  when: ec2_exact_count >= 1
  tags:
    - always
    - provision

- name: Create or destroy EC2 instances
  ec2:
    assign_public_ip: yes
    key_name: "{{ ec2_key_name }}"
    group: "{{ ec2_security_group }}"
    instance_type: "{{ item.instance_type }}"
    image: "{{ item.image }}"
    region: "{{ ec2_region }}"
    exact_count: "{{ ec2_exact_count }}"
    count_tag:
      Name: "{{ ec2_name_prefix }}-{{ environment }}-{{ item.role }}-{{ item.name }}"
    instance_tags:
      Name: "{{ ec2_name_prefix }}-{{ environment }}-{{ item.role }}-{{ item.name }}"
      Environment: "{{ environment }}"
      Role: "{{ item.role }}"
    wait: "{{ ec2_wait }}"
    vpc_subnet_id: "{{ ec2_vpc_subnet_id | default(omit) }}"
    volumes:
      - device_name: /dev/sda1
        volume_type: gp2
        volume_size: "{{ item.disk_size }}"
        delete_on_termination: true
  with_items:
    - "{{ nodes }}"
  register: ec2_jobs
  async: 7200
  poll: 0
  tags:
    - always
    - provision

- name: Wait for instance creation to complete
  async_status: jid="{{ item.ansible_job_id }}"
  register: instances
  until: instances.finished
  retries: 300
  with_items: "{{ ec2_jobs.results }}"
  tags:
    - always
    - provision

- name: Wait for instances to finish initializing
  pause:
    seconds: 90
  when: instances | changed
  tags:
    - always
    - provision

- name: Waiting for servers to come online
  wait_for: host="{{ item.tagged_instances[0].public_ip }}" port="{{ ssh_port }}" search_regex=OpenSSH
  with_items: "{{ instances.results }}"
  when: instances | changed
  tags:
    - always
    - provision
